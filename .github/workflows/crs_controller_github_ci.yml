name: Model verification example for the crs_controller model

on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'Design/crs_controller/**/*'
      - '.github/workflows/crs_controller_github_ci.yml'
      - 'tools/**/*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECTNAME: CruiseControlExample.prj
  LOGS_PATH: ./Code
  ARTIFACTS_NAME: crs_controller_ci_artifacts

jobs:
  setup:
    runs-on: self-hosted
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

  verify:
    runs-on: self-hosted
    needs: [setup]
    steps:
      - name: Run ModelAdvisor
        uses: matlab-actions/run-command@v1
        with:
          command: openProject('${{ env.PROJECTNAME }}');, crs_controllerModelAdvisor;
  
  testing:
    runs-on: self-hosted
    needs: [setup]
    steps:
      - name: unit test
      #  uses: matlab-actions/run-command@v1
      #  with:
      #    command: openProject('${{ env.PROJECTNAME }}');, crs_controllerTestFile;
        uses: matlab-actions/run-tests@v1
        with:
          select-by-folder: ./Design/crs_controller
          test-results-junit: ./Design/crs_controller/pipeline/analyze/testing/crs_controllerJUnitFormatTestResults.xml
          test-results-pdf: ./Design/crs_controller/pipeline/analyze/testing/crs_controllerTestResults.pdf
          test-results-simulink-test: ./Design/crs_controller/pipeline/analyze/testing/crs_controllerTestResults.mldatx
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: './Design/crs_controller/pipeline/analyze/testing/crs_controllerJUnitFormatTestResults.xml'
  
  build:
    runs-on: self-hosted
    needs: [verify,testing]
    steps:
      - name: Code Generation
        uses: matlab-actions/run-command@v1
        with:
          command: openProject('${{ env.PROJECTNAME }}');, crs_controllerBuild;
      
  package:
    runs-on: self-hosted
    needs: [verify,build,testing]
    steps:
      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACTS_NAME }}
          path: |
            ./Design/crs_controller/pipeline/analyze/**/*
            ./Code/codegen/crs_controller_ert_rtw